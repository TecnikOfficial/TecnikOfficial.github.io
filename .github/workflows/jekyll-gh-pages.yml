name: Deploy Jekyll with GitHub Pages and Optimization

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Optimize Assets
        run: |
          # Add commands here to optimize CSS, JavaScript, images, and other assets
          # Example: Minify CSS and JavaScript, optimize images, etc.

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Remove Unused CSS
        run: npx purify-css ./_site/css/*.css ./_site/**/*.html --min --out ./_site/css/purified.css
      - name: Install UglifyJS
        run: npm install uglify-js
      - name: Remove Unused JavaScript
        run: npx uglifyjs ./_site/js/file1.js ./_site/js/file2.js --compress --mangle --output ./_site/js/minified.js
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
